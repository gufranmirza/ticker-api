basePath: /ticker-api/v1
definitions:
  dbmodels.Trades:
    properties:
      average_price:
        type: number
      created_timestamp_utc:
        type: string
      id:
        type: string
      name:
        type: string
      shares:
        type: integer
      ticker_symbol:
        type: string
      updated_timestamp_utc:
        type: string
      user_id:
        type: string
    type: object
  errorinterface.ErrorResponse:
    properties:
      code:
        description: application-specific error code
        type: integer
      error:
        description: application-level error message, for debugging
        type: string
      status:
        description: user-level status message
        type: string
    type: object
  healthinterface.Health:
    properties:
      inboundInterfaces:
        items:
          $ref: '#/definitions/healthinterface.InboundInterface'
        type: array
      outboundInterfaces:
        items:
          $ref: '#/definitions/healthinterface.OutboundInterface'
        type: array
      serviceName:
        type: string
      serviceProvider:
        type: string
      serviceStartTimeUTC:
        type: string
      serviceStatus:
        type: string
      serviceVersion:
        type: string
      timeStampUTC:
        type: string
      uptime:
        type: number
    type: object
  healthinterface.InboundInterface:
    properties:
      address:
        type: string
      applicationName:
        type: string
      connectionStatus:
        type: string
      hostname:
        type: string
      os:
        type: string
      timeStampUTC:
        type: string
    type: object
  healthinterface.OutboundInterface:
    properties:
      applicationName:
        type: string
      connectionStatus:
        type: string
      timeStampUTC:
        type: string
      urls:
        items:
          type: string
        type: array
    type: object
  tradesinterface.NewTradeReq:
    properties:
      average_price:
        type: number
      shares:
        type: integer
    type: object
  tradesinterface.NewTradeRes:
    properties:
      average_price:
        type: number
      created_timestamp_utc:
        type: string
      id:
        type: string
      name:
        type: string
      shares:
        type: integer
      ticker_symbol:
        type: string
      updated_timestamp_utc:
        type: string
      user_id:
        type: string
    type: object
  tradesinterface.ReturnsRes:
    properties:
      total_return_amount:
        type: number
      trades:
        items:
          $ref: '#/definitions/tradesinterface.TradesReturn'
        type: array
    type: object
  tradesinterface.TradesReturn:
    properties:
      name:
        type: string
      return:
        type: number
    type: object
host: localhost:8001
info:
  contact: {}
  description: Ticker API Documentation
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Ticker API Documentation
  version: "2.0"
paths:
  /health:
    get:
      consumes:
      - application/json
      description: It returns the health of the service
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/healthinterface.Health'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
      summary: Get health of the service
      tags:
      - health
  /trades/{ticker_symbol}:
    delete:
      consumes:
      - application/json
      description: It delete the trade details for the given ticker symbol
      parameters:
      - description: Ticker Symbol
        in: path
        name: ticker_symbol
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200": {}
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
      summary: Delete trade details
      tags:
      - Trades
    get:
      consumes:
      - application/json
      description: It returns the trade details for the given ticker symbol
      parameters:
      - description: Ticker Symbol
        in: path
        name: ticker_symbol
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/tradesinterface.NewTradeRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
      summary: Get trade details
      tags:
      - Trades
    post:
      consumes:
      - application/json
      description: It creates new trade details with the given ticker symbol
      parameters:
      - description: Trade Details
        in: body
        name: '*'
        required: true
        schema:
          $ref: '#/definitions/tradesinterface.NewTradeReq'
      - description: Ticker Symbol
        in: path
        name: ticker_symbol
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/tradesinterface.NewTradeRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
      summary: Create new trade
      tags:
      - Trades
    put:
      consumes:
      - application/json
      description: It allows to update trade details with given ticker symbol
      parameters:
      - description: Trade Details
        in: body
        name: '*'
        required: true
        schema:
          $ref: '#/definitions/tradesinterface.NewTradeReq'
      - description: Ticker Symbol
        in: path
        name: ticker_symbol
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/tradesinterface.NewTradeRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
      summary: Update a trade
      tags:
      - Trades
  /trades/{ticker_symbol}/sell:
    post:
      consumes:
      - application/json
      description: It allows to sell trade with given ticker symbol
      parameters:
      - description: Trade Details
        in: body
        name: '*'
        required: true
        schema:
          $ref: '#/definitions/tradesinterface.NewTradeReq'
      - description: Ticker Symbol
        in: path
        name: ticker_symbol
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/tradesinterface.NewTradeRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
      summary: Sell a trade
      tags:
      - Trades
  /trades/portfolio:
    get:
      consumes:
      - application/json
      description: It returns trades portfolio for a given user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dbmodels.Trades'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
      summary: Get Portfolio
      tags:
      - Trades
  /trades/portfolio/returns:
    get:
      consumes:
      - application/json
      description: It returns total portfolio returns for a given user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/tradesinterface.ReturnsRes'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/errorinterface.ErrorResponse'
      summary: Get Portfolio returns
      tags:
      - Trades
swagger: "2.0"
